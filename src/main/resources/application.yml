server:
  port: 9000
spring:
  application:
    name: ShardingSphereDemo
  #datasource:
   # driver-class-name: com.mysql.cj.jdbc.Driver
    #username: root
    #password: root
    #url: jdbc:mysql://localhost:3306/data?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE
  sharding-sphere:
    datasource:
      names: ds1
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/data?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE
        url: jdbc:mysql://localhost:3306/data?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE
        username: root
        user: root
        password: root
    sharding:
      tables:
        t_order:
          key-generator:
            column: order_id
            type: SNOWFLAKE
          actual-data-nodes: ds1.t_order_$->{1..2}
          table-strategy:
            complex:
              algorithm-class-name: com.lvyanwei.shardingshperedemo.config.algorithm.HashModShardingAlgorithm
              sharding-columns: order_id
            #standard:
            #  preciseAlgorithmClassName: com.lvyanwei.shardingshperedemo.config.algorithm.HashModShardingAlgorithm
            #  sharding-column: order_id
            #inline:
            #  sharding-column: order_id
            #  algorithm-expression: t_order_$->{order_id%2+1}
    props:
      sql:
        show: true
logging:
  level:
    root: info
    com:
      light:
        sharding:
          jdbc: debug
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml, META-INF/mybatis/mapper/*.xml
